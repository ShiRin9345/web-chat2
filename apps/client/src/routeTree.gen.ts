/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/signUp'
import { Route as SignInRouteImport } from './routes/signIn'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedRequestsRouteImport } from './routes/_authenticated/requests'
import { Route as AuthenticatedMessagesRouteImport } from './routes/_authenticated/messages'
import { Route as AuthenticatedGroupsRouteImport } from './routes/_authenticated/groups'
import { Route as AuthenticatedContactsRouteImport } from './routes/_authenticated/contacts'
import { Route as AuthenticatedMessagesChatIdRouteImport } from './routes/_authenticated/messages.$chatId'

const SignUpRoute = SignUpRouteImport.update({
  id: '/signUp',
  path: '/signUp',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/signIn',
  path: '/signIn',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsRoute = AuthenticatedSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedRequestsRoute = AuthenticatedRequestsRouteImport.update({
  id: '/requests',
  path: '/requests',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedMessagesRoute = AuthenticatedMessagesRouteImport.update({
  id: '/messages',
  path: '/messages',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedGroupsRoute = AuthenticatedGroupsRouteImport.update({
  id: '/groups',
  path: '/groups',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedContactsRoute = AuthenticatedContactsRouteImport.update({
  id: '/contacts',
  path: '/contacts',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedMessagesChatIdRoute =
  AuthenticatedMessagesChatIdRouteImport.update({
    id: '/$chatId',
    path: '/$chatId',
    getParentRoute: () => AuthenticatedMessagesRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/contacts': typeof AuthenticatedContactsRoute
  '/groups': typeof AuthenticatedGroupsRoute
  '/messages': typeof AuthenticatedMessagesRouteWithChildren
  '/requests': typeof AuthenticatedRequestsRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/messages/$chatId': typeof AuthenticatedMessagesChatIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/contacts': typeof AuthenticatedContactsRoute
  '/groups': typeof AuthenticatedGroupsRoute
  '/messages': typeof AuthenticatedMessagesRouteWithChildren
  '/requests': typeof AuthenticatedRequestsRoute
  '/settings': typeof AuthenticatedSettingsRoute
  '/messages/$chatId': typeof AuthenticatedMessagesChatIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/_authenticated/contacts': typeof AuthenticatedContactsRoute
  '/_authenticated/groups': typeof AuthenticatedGroupsRoute
  '/_authenticated/messages': typeof AuthenticatedMessagesRouteWithChildren
  '/_authenticated/requests': typeof AuthenticatedRequestsRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRoute
  '/_authenticated/messages/$chatId': typeof AuthenticatedMessagesChatIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signIn'
    | '/signUp'
    | '/contacts'
    | '/groups'
    | '/messages'
    | '/requests'
    | '/settings'
    | '/messages/$chatId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signIn'
    | '/signUp'
    | '/contacts'
    | '/groups'
    | '/messages'
    | '/requests'
    | '/settings'
    | '/messages/$chatId'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/signIn'
    | '/signUp'
    | '/_authenticated/contacts'
    | '/_authenticated/groups'
    | '/_authenticated/messages'
    | '/_authenticated/requests'
    | '/_authenticated/settings'
    | '/_authenticated/messages/$chatId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signUp': {
      id: '/signUp'
      path: '/signUp'
      fullPath: '/signUp'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signIn': {
      id: '/signIn'
      path: '/signIn'
      fullPath: '/signIn'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/requests': {
      id: '/_authenticated/requests'
      path: '/requests'
      fullPath: '/requests'
      preLoaderRoute: typeof AuthenticatedRequestsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/messages': {
      id: '/_authenticated/messages'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof AuthenticatedMessagesRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/groups': {
      id: '/_authenticated/groups'
      path: '/groups'
      fullPath: '/groups'
      preLoaderRoute: typeof AuthenticatedGroupsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/contacts': {
      id: '/_authenticated/contacts'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof AuthenticatedContactsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/messages/$chatId': {
      id: '/_authenticated/messages/$chatId'
      path: '/$chatId'
      fullPath: '/messages/$chatId'
      preLoaderRoute: typeof AuthenticatedMessagesChatIdRouteImport
      parentRoute: typeof AuthenticatedMessagesRoute
    }
  }
}

interface AuthenticatedMessagesRouteChildren {
  AuthenticatedMessagesChatIdRoute: typeof AuthenticatedMessagesChatIdRoute
}

const AuthenticatedMessagesRouteChildren: AuthenticatedMessagesRouteChildren = {
  AuthenticatedMessagesChatIdRoute: AuthenticatedMessagesChatIdRoute,
}

const AuthenticatedMessagesRouteWithChildren =
  AuthenticatedMessagesRoute._addFileChildren(
    AuthenticatedMessagesRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedContactsRoute: typeof AuthenticatedContactsRoute
  AuthenticatedGroupsRoute: typeof AuthenticatedGroupsRoute
  AuthenticatedMessagesRoute: typeof AuthenticatedMessagesRouteWithChildren
  AuthenticatedRequestsRoute: typeof AuthenticatedRequestsRoute
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedContactsRoute: AuthenticatedContactsRoute,
  AuthenticatedGroupsRoute: AuthenticatedGroupsRoute,
  AuthenticatedMessagesRoute: AuthenticatedMessagesRouteWithChildren,
  AuthenticatedRequestsRoute: AuthenticatedRequestsRoute,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
