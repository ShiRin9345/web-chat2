/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/signUp'
import { Route as SignInRouteImport } from './routes/signIn'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedMessagesRouteImport } from './routes/_authenticated/messages'
import { Route as AuthenticatedContactsRouteImport } from './routes/_authenticated/contacts'
import { Route as AuthenticatedAssistantRouteImport } from './routes/_authenticated/assistant'
import { Route as AuthenticatedSettingsIndexRouteImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedMessagesIndexRouteImport } from './routes/_authenticated/messages/index'
import { Route as AuthenticatedSettingsThemeRouteImport } from './routes/_authenticated/settings/theme'
import { Route as AuthenticatedSettingsStorageRouteImport } from './routes/_authenticated/settings/storage'
import { Route as AuthenticatedSettingsShortcutsRouteImport } from './routes/_authenticated/settings/shortcuts'
import { Route as AuthenticatedSettingsSecurityRouteImport } from './routes/_authenticated/settings/security'
import { Route as AuthenticatedSettingsPrivacyRouteImport } from './routes/_authenticated/settings/privacy'
import { Route as AuthenticatedSettingsNotificationsRouteImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsGeneralRouteImport } from './routes/_authenticated/settings/general'
import { Route as AuthenticatedMessagesChatIdRouteImport } from './routes/_authenticated/messages/$chatId'

const SignUpRoute = SignUpRouteImport.update({
  id: '/signUp',
  path: '/signUp',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/signIn',
  path: '/signIn',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsRoute = AuthenticatedSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedMessagesRoute = AuthenticatedMessagesRouteImport.update({
  id: '/messages',
  path: '/messages',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedContactsRoute = AuthenticatedContactsRouteImport.update({
  id: '/contacts',
  path: '/contacts',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedAssistantRoute = AuthenticatedAssistantRouteImport.update({
  id: '/assistant',
  path: '/assistant',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedSettingsIndexRoute =
  AuthenticatedSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any)
const AuthenticatedMessagesIndexRoute =
  AuthenticatedMessagesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedMessagesRoute,
  } as any)
const AuthenticatedSettingsThemeRoute =
  AuthenticatedSettingsThemeRouteImport.update({
    id: '/theme',
    path: '/theme',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any)
const AuthenticatedSettingsStorageRoute =
  AuthenticatedSettingsStorageRouteImport.update({
    id: '/storage',
    path: '/storage',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any)
const AuthenticatedSettingsShortcutsRoute =
  AuthenticatedSettingsShortcutsRouteImport.update({
    id: '/shortcuts',
    path: '/shortcuts',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any)
const AuthenticatedSettingsSecurityRoute =
  AuthenticatedSettingsSecurityRouteImport.update({
    id: '/security',
    path: '/security',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any)
const AuthenticatedSettingsPrivacyRoute =
  AuthenticatedSettingsPrivacyRouteImport.update({
    id: '/privacy',
    path: '/privacy',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any)
const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any)
const AuthenticatedSettingsGeneralRoute =
  AuthenticatedSettingsGeneralRouteImport.update({
    id: '/general',
    path: '/general',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any)
const AuthenticatedMessagesChatIdRoute =
  AuthenticatedMessagesChatIdRouteImport.update({
    id: '/$chatId',
    path: '/$chatId',
    getParentRoute: () => AuthenticatedMessagesRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/assistant': typeof AuthenticatedAssistantRoute
  '/contacts': typeof AuthenticatedContactsRoute
  '/messages': typeof AuthenticatedMessagesRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRouteWithChildren
  '/messages/$chatId': typeof AuthenticatedMessagesChatIdRoute
  '/settings/general': typeof AuthenticatedSettingsGeneralRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/settings/privacy': typeof AuthenticatedSettingsPrivacyRoute
  '/settings/security': typeof AuthenticatedSettingsSecurityRoute
  '/settings/shortcuts': typeof AuthenticatedSettingsShortcutsRoute
  '/settings/storage': typeof AuthenticatedSettingsStorageRoute
  '/settings/theme': typeof AuthenticatedSettingsThemeRoute
  '/messages/': typeof AuthenticatedMessagesIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/assistant': typeof AuthenticatedAssistantRoute
  '/contacts': typeof AuthenticatedContactsRoute
  '/messages/$chatId': typeof AuthenticatedMessagesChatIdRoute
  '/settings/general': typeof AuthenticatedSettingsGeneralRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/settings/privacy': typeof AuthenticatedSettingsPrivacyRoute
  '/settings/security': typeof AuthenticatedSettingsSecurityRoute
  '/settings/shortcuts': typeof AuthenticatedSettingsShortcutsRoute
  '/settings/storage': typeof AuthenticatedSettingsStorageRoute
  '/settings/theme': typeof AuthenticatedSettingsThemeRoute
  '/messages': typeof AuthenticatedMessagesIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/_authenticated/assistant': typeof AuthenticatedAssistantRoute
  '/_authenticated/contacts': typeof AuthenticatedContactsRoute
  '/_authenticated/messages': typeof AuthenticatedMessagesRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteWithChildren
  '/_authenticated/messages/$chatId': typeof AuthenticatedMessagesChatIdRoute
  '/_authenticated/settings/general': typeof AuthenticatedSettingsGeneralRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_authenticated/settings/privacy': typeof AuthenticatedSettingsPrivacyRoute
  '/_authenticated/settings/security': typeof AuthenticatedSettingsSecurityRoute
  '/_authenticated/settings/shortcuts': typeof AuthenticatedSettingsShortcutsRoute
  '/_authenticated/settings/storage': typeof AuthenticatedSettingsStorageRoute
  '/_authenticated/settings/theme': typeof AuthenticatedSettingsThemeRoute
  '/_authenticated/messages/': typeof AuthenticatedMessagesIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signIn'
    | '/signUp'
    | '/assistant'
    | '/contacts'
    | '/messages'
    | '/settings'
    | '/messages/$chatId'
    | '/settings/general'
    | '/settings/notifications'
    | '/settings/privacy'
    | '/settings/security'
    | '/settings/shortcuts'
    | '/settings/storage'
    | '/settings/theme'
    | '/messages/'
    | '/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signIn'
    | '/signUp'
    | '/assistant'
    | '/contacts'
    | '/messages/$chatId'
    | '/settings/general'
    | '/settings/notifications'
    | '/settings/privacy'
    | '/settings/security'
    | '/settings/shortcuts'
    | '/settings/storage'
    | '/settings/theme'
    | '/messages'
    | '/settings'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/signIn'
    | '/signUp'
    | '/_authenticated/assistant'
    | '/_authenticated/contacts'
    | '/_authenticated/messages'
    | '/_authenticated/settings'
    | '/_authenticated/messages/$chatId'
    | '/_authenticated/settings/general'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/settings/privacy'
    | '/_authenticated/settings/security'
    | '/_authenticated/settings/shortcuts'
    | '/_authenticated/settings/storage'
    | '/_authenticated/settings/theme'
    | '/_authenticated/messages/'
    | '/_authenticated/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signUp': {
      id: '/signUp'
      path: '/signUp'
      fullPath: '/signUp'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signIn': {
      id: '/signIn'
      path: '/signIn'
      fullPath: '/signIn'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/messages': {
      id: '/_authenticated/messages'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof AuthenticatedMessagesRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/contacts': {
      id: '/_authenticated/contacts'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof AuthenticatedContactsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/assistant': {
      id: '/_authenticated/assistant'
      path: '/assistant'
      fullPath: '/assistant'
      preLoaderRoute: typeof AuthenticatedAssistantRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedSettingsRoute
    }
    '/_authenticated/messages/': {
      id: '/_authenticated/messages/'
      path: '/'
      fullPath: '/messages/'
      preLoaderRoute: typeof AuthenticatedMessagesIndexRouteImport
      parentRoute: typeof AuthenticatedMessagesRoute
    }
    '/_authenticated/settings/theme': {
      id: '/_authenticated/settings/theme'
      path: '/theme'
      fullPath: '/settings/theme'
      preLoaderRoute: typeof AuthenticatedSettingsThemeRouteImport
      parentRoute: typeof AuthenticatedSettingsRoute
    }
    '/_authenticated/settings/storage': {
      id: '/_authenticated/settings/storage'
      path: '/storage'
      fullPath: '/settings/storage'
      preLoaderRoute: typeof AuthenticatedSettingsStorageRouteImport
      parentRoute: typeof AuthenticatedSettingsRoute
    }
    '/_authenticated/settings/shortcuts': {
      id: '/_authenticated/settings/shortcuts'
      path: '/shortcuts'
      fullPath: '/settings/shortcuts'
      preLoaderRoute: typeof AuthenticatedSettingsShortcutsRouteImport
      parentRoute: typeof AuthenticatedSettingsRoute
    }
    '/_authenticated/settings/security': {
      id: '/_authenticated/settings/security'
      path: '/security'
      fullPath: '/settings/security'
      preLoaderRoute: typeof AuthenticatedSettingsSecurityRouteImport
      parentRoute: typeof AuthenticatedSettingsRoute
    }
    '/_authenticated/settings/privacy': {
      id: '/_authenticated/settings/privacy'
      path: '/privacy'
      fullPath: '/settings/privacy'
      preLoaderRoute: typeof AuthenticatedSettingsPrivacyRouteImport
      parentRoute: typeof AuthenticatedSettingsRoute
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsRouteImport
      parentRoute: typeof AuthenticatedSettingsRoute
    }
    '/_authenticated/settings/general': {
      id: '/_authenticated/settings/general'
      path: '/general'
      fullPath: '/settings/general'
      preLoaderRoute: typeof AuthenticatedSettingsGeneralRouteImport
      parentRoute: typeof AuthenticatedSettingsRoute
    }
    '/_authenticated/messages/$chatId': {
      id: '/_authenticated/messages/$chatId'
      path: '/$chatId'
      fullPath: '/messages/$chatId'
      preLoaderRoute: typeof AuthenticatedMessagesChatIdRouteImport
      parentRoute: typeof AuthenticatedMessagesRoute
    }
  }
}

interface AuthenticatedMessagesRouteChildren {
  AuthenticatedMessagesChatIdRoute: typeof AuthenticatedMessagesChatIdRoute
  AuthenticatedMessagesIndexRoute: typeof AuthenticatedMessagesIndexRoute
}

const AuthenticatedMessagesRouteChildren: AuthenticatedMessagesRouteChildren = {
  AuthenticatedMessagesChatIdRoute: AuthenticatedMessagesChatIdRoute,
  AuthenticatedMessagesIndexRoute: AuthenticatedMessagesIndexRoute,
}

const AuthenticatedMessagesRouteWithChildren =
  AuthenticatedMessagesRoute._addFileChildren(
    AuthenticatedMessagesRouteChildren,
  )

interface AuthenticatedSettingsRouteChildren {
  AuthenticatedSettingsGeneralRoute: typeof AuthenticatedSettingsGeneralRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsPrivacyRoute: typeof AuthenticatedSettingsPrivacyRoute
  AuthenticatedSettingsSecurityRoute: typeof AuthenticatedSettingsSecurityRoute
  AuthenticatedSettingsShortcutsRoute: typeof AuthenticatedSettingsShortcutsRoute
  AuthenticatedSettingsStorageRoute: typeof AuthenticatedSettingsStorageRoute
  AuthenticatedSettingsThemeRoute: typeof AuthenticatedSettingsThemeRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteChildren: AuthenticatedSettingsRouteChildren = {
  AuthenticatedSettingsGeneralRoute: AuthenticatedSettingsGeneralRoute,
  AuthenticatedSettingsNotificationsRoute:
    AuthenticatedSettingsNotificationsRoute,
  AuthenticatedSettingsPrivacyRoute: AuthenticatedSettingsPrivacyRoute,
  AuthenticatedSettingsSecurityRoute: AuthenticatedSettingsSecurityRoute,
  AuthenticatedSettingsShortcutsRoute: AuthenticatedSettingsShortcutsRoute,
  AuthenticatedSettingsStorageRoute: AuthenticatedSettingsStorageRoute,
  AuthenticatedSettingsThemeRoute: AuthenticatedSettingsThemeRoute,
  AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
}

const AuthenticatedSettingsRouteWithChildren =
  AuthenticatedSettingsRoute._addFileChildren(
    AuthenticatedSettingsRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedAssistantRoute: typeof AuthenticatedAssistantRoute
  AuthenticatedContactsRoute: typeof AuthenticatedContactsRoute
  AuthenticatedMessagesRoute: typeof AuthenticatedMessagesRouteWithChildren
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAssistantRoute: AuthenticatedAssistantRoute,
  AuthenticatedContactsRoute: AuthenticatedContactsRoute,
  AuthenticatedMessagesRoute: AuthenticatedMessagesRouteWithChildren,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
